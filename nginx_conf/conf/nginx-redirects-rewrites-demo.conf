events{}

http {
    include mime.types;

    server {
        listen 80;
        server_name 127.0.0.1;
        root /Users/akashshaw/prac/nginx_demo/sites/demo/;

        # \w+ means more than one word character
        # rewrite ^/user/\w+ /greet;

        # Another powerful feature of rewrites is the ability to 
        # capture certain parts of the original URI using standard regular expressions capture groups
        # In the following example, if we want to capture user name, simply wrap it in () braces
        rewrite ^/user/(\w+) /greet/$1;

        # Rewrite passing optional flags
        # In the below case, the request URI will be rewritten using the above rewrite directive
        # And, then again re-evaluated using the following rewrite directive
        # If, we dont want the consecutive rewrites to happen, we can add last to the rewrite directive.
        # rewrite ^/user/(\w+) /greet/$1 last;
        rewrite ^/greet/john /sample.jpg;


        location /greet {
            return 200 "Hello user";
        }

        location = /greet/shaw {
            return 200 "Hello shaw";
        }

        # location /logo {
        #     # relative URI will work as it is from the same server
        #     return 307 /sample.jpg;
        # }
    }
}
