# Used to spawn more worker processes
worker_processes auto;

events{
    worker_connections 2560;
}

http {
    include mime.types;

    # Redirect all HTTP requests to HTTPS
    # Create a virtual host and redirect
    server {
        listen 80;
        server_name 127.0.0.1;
        return 301 https://$server_name$request_uri;
    }


    server {
        # listen 80;
        # Enabling SSL
        listen 443 ssl http2;
        server_name 127.0.0.1;
        root /Users/akashshaw/prac/nginx_demo/sites/demo/;
    
        index index.html;


        # Configuring the SSL certificate
        ssl_certificate /Users/akashshaw/prac/nginx_demo/ssl/self.crt;
        ssl_certificate_key /Users/akashshaw/prac/nginx_demo/ssl/self.key;

        # Disable SSL and encrypt using TLS only
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        # Optimise cipher suits - which cipher suit should be used by TLS to encrpyt our connection
        ssl_prefer_server_ciphers on;
        # Each suit is separated by : and ! means not to use
        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        # Enable Diffie Hellman key exchange - DH Params
        ssl_dhparam /Users/akashshaw/prac/nginx_demo/ssl/dhparam.pem;

        # Enabling HSTS - Strict Transport Security
        add_header Strict-Transport-Security "max-age=31536000" always;

        # Cache for SSL sessions
        ssl_session_cache shared:SSL:40m;
        ssl_session_timeout 4h;
        ssl_session_tickets on;


        location / {
            auth_basic "Secure Area";
            auth_basic_user_file /Users/akashshaw/prac/nginx_demo/passwd/.htpasswd;
            try_files $uri $uri/ =404;
        }
     
        # regex match which will take priority over the prefix match above
        location ~\.php$ {
            # Pass PHP requests to the php-fpm service (fastcgi)
            include fastcgi.conf;
            fastcgi_pass   127.0.0.1:9000;
            # We can use fastcgi to pass this to an Unix socket created by php-fpm. It is like a port where the service can listen for binary data.
            # fastcgi_pass unix:/run/php/php7.1-fpm.sock;
        }
    }
}
