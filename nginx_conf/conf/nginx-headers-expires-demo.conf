# Used to spawn more worker processes
worker_processes auto;

# Configuring the process id location 
# pid /var/run/new_nginx.pid

events{
    worker_connections 2560;
}

http {
    include mime.types;
    
    # Buffer size for POST submission
    # allocating more than what is required will basically waste memory on the server
    client_body_buffer_size 10K;
    client_max_body_size 8m;

    # Buffer size for headers
    client_header_buffer_size 1k;

    # Max time to receive client headers/ body
    # timeout is in miliseconds
    client_body_timeout 12;
    client_header_timeout 12;

    # Max time to keep a connection open for in case any returning requests are to come. Leaving it too high can
    # result in the pool of max connections (worker_processes * worker_connections) being used up
    keepalive_timeout 15;

    # Max time for the client accept/ receive a response
    send_timeout 10;

    # Skip buffering for static files
    # When sending files from the disk, don't use the buffer. Read the file directly from the disk and write
    # it to directly to the response
    sendfile on;

    # Optimize sendfile packets
    tcp_nopush on;    

    server {
        listen 80;
        server_name 127.0.0.1;
        root /Users/akashshaw/prac/nginx_demo/sites/demo/;
    
        index index.php index.html;
        
        location / {
            try_files $uri $uri/ =404;
        }
     
        # regex match which will take priority over the prefix match above
        location ~\.php$ {
            # Pass PHP requests to the php-fpm service (fastcgi)
            include fastcgi.conf;
            fastcgi_pass   127.0.0.1:9000;
            # We can use fastcgi to pass this to an Unix socket created by php-fpm. It is like a port where the service can listen for binary data.
            # fastcgi_pass unix:/run/php/php7.1-fpm.sock;
        }
    }
}
